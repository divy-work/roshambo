// Generated by Haxe 4.0.5
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Type extends haxe.lang.HxObject
{
	public Type(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Type()
	{
		//line 39 "/usr/share/haxe/std/java/_std/Type.hx"
		haxe.root.Type.__hx_ctor__Type(this);
	}
	
	
	protected static void __hx_ctor__Type(haxe.root.Type __hx_this)
	{
	}
	
	
	public static java.lang.Class getEnum(java.lang.Object o)
	{
		//line 48 "/usr/share/haxe/std/java/_std/Type.hx"
		if (( ( o instanceof java.lang.Enum ) || ( o instanceof haxe.lang.Enum ) )) 
		{
			//line 49 "/usr/share/haxe/std/java/_std/Type.hx"
			return o.getClass();
		}
		
		//line 51 "/usr/share/haxe/std/java/_std/Type.hx"
		return null;
	}
	
	
	public static <T> T createEnum(java.lang.Class e, java.lang.String constr, haxe.root.Array params)
	{
		//line 196 "/usr/share/haxe/std/java/_std/Type.hx"
		if (( ( params == null ) || ( params.length == 0 ) )) 
		{
			//line 197 "/usr/share/haxe/std/java/_std/Type.hx"
			java.lang.Object ret = haxe.lang.Runtime.slowGetField(e, constr, true);
			//line 198 "/usr/share/haxe/std/java/_std/Type.hx"
			if (( ret instanceof haxe.lang.Function )) 
			{
				//line 199 "/usr/share/haxe/std/java/_std/Type.hx"
				throw haxe.lang.HaxeException.wrap(( ( "Constructor " + constr ) + " needs parameters" ));
			}
			
			//line 201 "/usr/share/haxe/std/java/_std/Type.hx"
			return ((T) (ret) );
		}
		else
		{
			//line 203 "/usr/share/haxe/std/java/_std/Type.hx"
			java.lang.Object[] ret1 = new java.lang.Object[params.length];
			//line 203 "/usr/share/haxe/std/java/_std/Type.hx"
			{
				//line 203 "/usr/share/haxe/std/java/_std/Type.hx"
				int _g = 0;
				//line 203 "/usr/share/haxe/std/java/_std/Type.hx"
				int _g1 = params.length;
				//line 203 "/usr/share/haxe/std/java/_std/Type.hx"
				while (( _g < _g1 ))
				{
					//line 203 "/usr/share/haxe/std/java/_std/Type.hx"
					int i = _g++;
					//line 203 "/usr/share/haxe/std/java/_std/Type.hx"
					ret1[i] = params.__get(i);
				}
				
			}
			
			//line 203 "/usr/share/haxe/std/java/_std/Type.hx"
			java.lang.Object[] params1 = ret1;
			//line 204 "/usr/share/haxe/std/java/_std/Type.hx"
			return ((T) (haxe.lang.Runtime.slowCallField(e, constr, params1)) );
		}
		
	}
	
	
	public static haxe.root.Array<java.lang.String> getClassFields(java.lang.Class c)
	{
		
		Array<String> ret = new Array<String>();
		if (c == java.lang.String.class)
		{
			ret.push("fromCharCode");
			return ret;
		}

		for (java.lang.reflect.Field f : c.getDeclaredFields())
		{
			java.lang.String fname = f.getName();
			if (java.lang.reflect.Modifier.isStatic(f.getModifiers()) && !fname.startsWith("__hx_"))
			ret.push(fname);
		}

		for (java.lang.reflect.Method m : c.getDeclaredMethods())
		{
			if (m.getDeclaringClass() == java.lang.Object.class)
				continue;
			java.lang.String mname = m.getName();
			if (java.lang.reflect.Modifier.isStatic(m.getModifiers()) && !mname.startsWith("__hx_"))
				ret.push(mname);
		}

		return ret;
	
	}
	
	
	public static haxe.root.Array<java.lang.String> getEnumConstructs(java.lang.Class e)
	{
		//line 273 "/usr/share/haxe/std/java/_std/Type.hx"
		if (haxe.root.Reflect.hasField(e, "__hx_constructs")) 
		{
			//line 274 "/usr/share/haxe/std/java/_std/Type.hx"
			haxe.root.Array<java.lang.String> ret = haxe.java.Lib.array_String(((java.lang.String[]) (haxe.lang.Runtime.getField(e, "__hx_constructs", true)) ));
			//line 275 "/usr/share/haxe/std/java/_std/Type.hx"
			return ret.copy();
		}
		
		//line 277 "/usr/share/haxe/std/java/_std/Type.hx"
		java.lang.Enum[] vals = ((java.lang.Enum[]) (haxe.lang.Runtime.callField(e, "values", null)) );
		//line 277 "/usr/share/haxe/std/java/_std/Type.hx"
		haxe.root.Array<java.lang.String> ret1 = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
		//line 279 "/usr/share/haxe/std/java/_std/Type.hx"
		{
			//line 279 "/usr/share/haxe/std/java/_std/Type.hx"
			int _g = 0;
			//line 279 "/usr/share/haxe/std/java/_std/Type.hx"
			int _g1 = vals.length;
			//line 279 "/usr/share/haxe/std/java/_std/Type.hx"
			while (( _g < _g1 ))
			{
				//line 279 "/usr/share/haxe/std/java/_std/Type.hx"
				int i = _g++;
				//line 280 "/usr/share/haxe/std/java/_std/Type.hx"
				ret1.__set(i, vals[i].name());
			}
			
		}
		
		//line 281 "/usr/share/haxe/std/java/_std/Type.hx"
		return ret1;
	}
	
	
	public static <T> boolean enumEq(T a, T b)
	{
		
			if (a instanceof haxe.lang.Enum)
				return a.equals(b);
			else
				return haxe.lang.Runtime.eq(a, b);
	
	}
	
	
	public static int enumIndex(java.lang.Object e)
	{
		
		if (e instanceof java.lang.Enum)
			return ((java.lang.Enum) e).ordinal();
		else
			return ((haxe.lang.Enum) e).index;
	
	}
	
	
	public static <T> haxe.root.Array<T> allEnums(java.lang.Class e)
	{
		//line 360 "/usr/share/haxe/std/java/_std/Type.hx"
		haxe.root.Array<java.lang.String> ctors = haxe.root.Type.getEnumConstructs(e);
		//line 361 "/usr/share/haxe/std/java/_std/Type.hx"
		haxe.root.Array<T> ret = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 362 "/usr/share/haxe/std/java/_std/Type.hx"
		{
			//line 362 "/usr/share/haxe/std/java/_std/Type.hx"
			int _g = 0;
			//line 362 "/usr/share/haxe/std/java/_std/Type.hx"
			while (( _g < ctors.length ))
			{
				//line 362 "/usr/share/haxe/std/java/_std/Type.hx"
				java.lang.String ctor = ctors.__get(_g);
				//line 362 "/usr/share/haxe/std/java/_std/Type.hx"
				 ++ _g;
				//line 363 "/usr/share/haxe/std/java/_std/Type.hx"
				T v = ((T) (haxe.root.Reflect.field(e, ctor)) );
				//line 364 "/usr/share/haxe/std/java/_std/Type.hx"
				if (haxe.root.Std.is(v, e)) 
				{
					//line 365 "/usr/share/haxe/std/java/_std/Type.hx"
					ret.push(v);
				}
				
			}
			
		}
		
		//line 368 "/usr/share/haxe/std/java/_std/Type.hx"
		return ret;
	}
	
	
}


