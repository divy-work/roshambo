// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_Result
#include <Result.h>
#endif

::Result Result_obj::Draw;

::Result Result_obj::Winner( ::Dynamic player)
{
	return hx::CreateEnum< Result_obj >(HX_("Winner",df,95,28,87),0,1)->_hx_init(0,player);
}

bool Result_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Draw",24,58,49,2d)) { outValue = Result_obj::Draw; return true; }
	if (inName==HX_("Winner",df,95,28,87)) { outValue = Result_obj::Winner_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(Result_obj)

int Result_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Draw",24,58,49,2d)) return 1;
	if (inName==HX_("Winner",df,95,28,87)) return 0;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Result_obj,Winner,return)

int Result_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Draw",24,58,49,2d)) return 0;
	if (inName==HX_("Winner",df,95,28,87)) return 1;
	return super::__FindArgCount(inName);
}

hx::Val Result_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Draw",24,58,49,2d)) return Draw;
	if (inName==HX_("Winner",df,95,28,87)) return Winner_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String Result_obj_sStaticFields[] = {
	HX_("Winner",df,95,28,87),
	HX_("Draw",24,58,49,2d),
	::String(null())
};

hx::Class Result_obj::__mClass;

Dynamic __Create_Result_obj() { return new Result_obj; }

void Result_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_("Result",fd,dc,18,3d), hx::TCanCast< Result_obj >,Result_obj_sStaticFields,0,
	&__Create_Result_obj, &__Create,
	&super::__SGetClass(), &CreateResult_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &Result_obj::__GetStatic;
}

void Result_obj::__boot()
{
Draw = hx::CreateConstEnum< Result_obj >(HX_("Draw",24,58,49,2d),1);
}


